/* =========================================================
   ðŸŽ¬ Motion Tokens
   Two-level structure: primitives + semantic patterns
   Maintainer: Viktor Engelbert
   Source: https://v3ktor2.github.io/design-tokens-motion/css/motion.css
========================================================= */

/* ===========================================
   ðŸ§© Level 1 â€” Primitive Motion Tokens
   (Low-level building blocks)
=========================================== */
:root {
  /* === Duration === */
  --motion-dur-xs: 120ms;   /* micro feedback (hover, icon blink) */
  --motion-dur-s: 180ms;    /* small state changes (press, tooltip) */
  --motion-dur-m: 240ms;    /* medium transitions (accordion, dropdown) */
  --motion-dur-l: 320ms;    /* overlays, drawers */
  --motion-dur-xl: 420ms;   /* large view transitions */

  /* === Delay & Stagger === */
  --motion-delay-none: 0ms;
  --motion-delay-s: 40ms;
  --motion-delay-m: 80ms;
  --motion-stagger-s: 30ms;
  --motion-stagger-m: 60ms;

  /* === Easing === */
  --motion-ease-in: cubic-bezier(0.4, 0, 1, 1);
  --motion-ease-out: cubic-bezier(0, 0, 0.2, 1);
  --motion-ease-standard: cubic-bezier(0.2, 0, 0, 1);
  --motion-ease-emph: cubic-bezier(0.05, 0.7, 0.1, 1);

  /* === Transform, Opacity & Scale === */
  --motion-translate-xs: 4px;
  --motion-translate-s: 8px;
  --motion-translate-m: 12px;
  --motion-opacity-dim: 0.4;

  --motion-scale-tap: 0.96;  /* press feedback */
  --motion-scale-pop: 1.06;  /* success emphasis */
}

/* ===========================================
   ðŸŽ¨ Level 2 â€” Semantic Motion Tokens
   (Meaningful reusable motion patterns)
=========================================== */
:root {
  /* === Enter / Exit === */
  --motion-enter-duration: var(--motion-dur-m);
  --motion-enter-easing: var(--motion-ease-out);
  --motion-enter-distance: var(--motion-translate-s);
  --motion-enter: transform var(--motion-enter-duration) var(--motion-enter-easing),
                  opacity var(--motion-enter-duration) var(--motion-ease-standard);

  --motion-exit-duration: var(--motion-dur-s);
  --motion-exit-easing: var(--motion-ease-in);
  --motion-exit-distance: var(--motion-translate-s);
  --motion-exit: transform var(--motion-exit-duration) var(--motion-exit-easing),
                 opacity var(--motion-exit-duration) var(--motion-ease-standard);

  /* === Fade === */
  --motion-fade-duration: var(--motion-dur-m);
  --motion-fade-easing: var(--motion-ease-standard);
  --motion-fade: opacity var(--motion-fade-duration) var(--motion-fade-easing);

  /* === Slide (Horizontal) === */
  --motion-slide-h-distance: var(--motion-translate-m);
  --motion-slide-h-duration: var(--motion-dur-l);
  --motion-slide-h: transform var(--motion-slide-h-duration) var(--motion-ease-out),
                    box-shadow var(--motion-slide-h-duration) var(--motion-ease-out);

  /* === Feedback / Success === */
  --motion-feedback-duration: var(--motion-dur-s);
  --motion-feedback-easing: var(--motion-ease-emph);
  --motion-feedback: transform var(--motion-feedback-duration) var(--motion-feedback-easing),
                     opacity var(--motion-feedback-duration) var(--motion-fade-easing);

  /* === Scale === */
  --motion-scale-tap-transition:
    transform var(--motion-dur-s) var(--motion-ease-out);
  --motion-scale-pop-transition:
    transform var(--motion-dur-m) var(--motion-ease-emph);
}

/* ===========================================
   â™¿ Reduced Motion Support
=========================================== */
@media (prefers-reduced-motion: reduce) {
  :root {
    --motion-dur-xs: 0ms;
    --motion-dur-s: 0ms;
    --motion-dur-m: 0ms;
    --motion-dur-l: 0ms;
    --motion-dur-xl: 0ms;

    --motion-enter-distance: 0px;
    --motion-exit-distance: 0px;
    --motion-slide-h-distance: 0px;
  }

  * {
    animation: none !important;
    transition-duration: 0ms !important;
    transition-delay: 0ms !important;
  }
}

/* ===========================================
   ðŸ§¾ Usage Examples (for documentation)
   These do not affect runtime, purely illustrative.
=========================================== */
/*
.toast {
  transform: translateY(var(--motion-enter-distance));
  transition: var(--motion-enter);
}

.sidebar {
  transition: var(--motion-slide-h);
}

.buy-btn {
  transition: var(--motion-scale-tap-transition);
}

.spinner.visible {
  transition: var(--motion-enter);
}

.checkmark.visible {
  transition: var(--motion-scale-pop-transition);
}
*/
